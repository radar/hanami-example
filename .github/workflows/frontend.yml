# This is a basic workflow to help you get started with Actions

name: Frontend checks

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    defaults:
      run:
        working-directory: "frontend"
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.15.1

      - run: "npm install -g yarn"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: "yarn"
        if: steps.yarn-cache.outputs.cache-hit != 'true'

  typescript:
    defaults:
      run:
        working-directory: "frontend"
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    
      - uses: actions/checkout@v2
      
       
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.15.1

      - name: TypeScript check
        run: yarn tsc
